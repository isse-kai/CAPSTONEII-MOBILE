import React, { ComponentProps } from 'react';
import { TextInput as rTextInput } from 'react-native';
import { ColorPath, StyledProps } from '../types-v2/sx';
declare const DripsyInput: React.ForwardRefExoticComponent<Omit<React.PropsWithChildren<import("react-native").TextInputProps>, "variant" | "variants"> & StyledProps<"forms"> & React.RefAttributes<rTextInput>>;
type InputProps = React.ComponentPropsWithoutRef<typeof DripsyInput>;
type ColorKeys = keyof Pick<InputProps, 'selectionColor' | 'underlineColorAndroid' | 'placeholderTextColor'>;
export type DripsyTextInputProps = StyledProps<'forms'> & Omit<ComponentProps<typeof rTextInput>, ColorKeys> & {
    [key in ColorKeys]?: (string & {}) | ColorPath;
};
export declare const TextInput: React.ForwardRefExoticComponent<StyledProps<"forms"> & Omit<import("react-native").TextInputProps, "selectionColor" | "placeholderTextColor" | "underlineColorAndroid"> & {
    selectionColor?: (string & {}) | undefined;
    placeholderTextColor?: (string & {}) | undefined;
    underlineColorAndroid?: (string & {}) | undefined;
} & React.RefAttributes<rTextInput>>;
export {};
//# sourceMappingURL=TextInput.d.ts.map