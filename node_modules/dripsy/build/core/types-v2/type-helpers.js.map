{"version":3,"file":"type-helpers.js","sourceRoot":"","sources":["../../../src/core/types-v2/type-helpers.ts"],"names":[],"mappings":"","sourcesContent":["export type SmartOmit<T, K extends keyof T> = Omit<T, K>\n\nexport type Keyof<T> = keyof T extends any ? Extract<keyof T, string> : never\n\n// given a dictionary, the key must match the value\n// very useful to ensure the types are correct\ntype ValidTest<T> = {\n  [K in keyof T]: K\n}\nexport type AssertTest<T, U extends ValidTest<T>> = `-> ${Extract<\n  keyof T,\n  string\n>}`\n\nexport type AssertEqual<T, U extends T> = U\n"]}